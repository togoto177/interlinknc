<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boards">
	<resultMap type="Board" id="boardResult">
		<result property="board_seq" column="board_seq" />
		<result property="board_division" column="board_division" />
		<result property="board_title" column="board_title" />
		<result property="board_content" column="board_content" />
		<result property="board_hit" column="board_hit" />
		<result property="board_use_yn" column="board_use_yn" />
		<result property="board_writer" column="board_writer" />
		<result property="board_registerdate" column="board_registerdate" />
		<result property="board_updateid" column="board_updateid" />
		<result property="board_update_date" column="board_update_date" />
		<result property="board_etc" column="board_etc" />

	</resultMap>
	
	<!-- 공통 쿼리 -->
	
	<insert id="board_insert" parameterType="Board">
	
		insert into board_tb
			
			values(

			#{board_seq},
			#{board_division},
			#{board_title},
			#{board_content},
			#{board_hit},
			#{board_use_yn},
			#{board_writer},
			now(),
			#{board_updateid},
			now(),
			#{board_etc}
		
        );
        <selectKey keyProperty="board_seq" resultType="Integer">
   			SELECT LAST_INSERT_ID();
  		</selectKey>        
	</insert>
	
	<select id="board_read" resultType="Board" parameterType="int"> 
        	
        	select a.*, b.*, c.user_id, c.user_email, c.user_contact, c.status,
			(select a.board_seq  from board_tb a 
            where a.board_division = #{board_division} and a.board_use_yn = 'Y' and <![CDATA[a.board_seq < #{board_seq}]]>  
            ORDER BY a.board_seq desc LIMIT 1) as preview,
            (select a.board_title  from board_tb a 
            where a.board_division = #{board_division} and a.board_use_yn = 'Y' and <![CDATA[a.board_seq < #{board_seq}]]>  
            ORDER BY a.board_seq desc LIMIT 1) as pretitle,
            (select a.board_seq from board_tb a 
            where a.board_division = #{board_division} and a.board_use_yn = 'Y' and <![CDATA[a.board_seq > #{board_seq}]]>  
            ORDER BY a.board_seq asc LIMIT 1) as nextview,
            (select a.board_title from board_tb a 
            where a.board_division = #{board_division} and a.board_use_yn = 'Y' and <![CDATA[a.board_seq > #{board_seq}]]>  
            ORDER BY a.board_seq asc LIMIT 1) as nexttitle
        	from board_tb a left join portfolio_tb b on a.board_seq = b.board_seq left join customer_tb c on a.board_seq = c.board_seq where a.board_seq = #{board_seq}; 
	</select>
	
	<select id="board_list" resultType="Board" parameterType="java.util.HashMap">
	
	    select 
        a.*, c.business_period, c.buyer, c.link, c.portfolio_etc, d.status, d.user_id,
        (select count(b.file_seq) from file_tb b where b.file_use_yn = 'y' and b.board_seq = a.board_seq) as file_cnt,
        (select sum(b.file_hit) from file_tb b where b.board_seq = a.board_seq and b.file_use_yn = 'Y'  ) as file_hit,
        (select group_concat(b.file_sub_name,'*',a.board_division,'*',b.file_seq separator '|') 
        from file_tb b 
        where a.board_seq = b.board_seq and b.file_use_yn='Y') as file_sub_name,  
        (select group_concat(b.file_ori_name separator '|') 
        from file_tb b 
        
        where a.board_seq = b.board_seq and b.file_use_yn='Y') as file_ori_name,
        (select c.pf_division from portfolio_tb c where c.board_seq = a.board_seq) as pf_division
        from board_tb a left join portfolio_tb c on a.board_seq = c.board_seq left join customer_tb d on a.board_seq = d.board_seq
        
         where a.board_division = #{board_division} and a.board_use_yn = 'Y'
		 <choose>
     	<when test="sch_type == 'board_title'">
		  AND a.board_title like CONCAT('%', #{sch_value}, '%')
		  </when>
		  <when test="sch_type == 'board_content'">
		  AND a.board_content like CONCAT('%', #{sch_value}, '%')
		  </when>
		  </choose>
        order by board_seq desc
        
        limit #{start}, #{end};
	
	</select>
	
	<select id="board_cnt" resultType="int" parameterType="Board">
	
	    select count(board_seq) from board_tb 
	    where board_division = #{board_division} and board_use_yn = 'y'
     	<choose>
	     	  <when test="sch_type == 'board_title'">
			  AND board_title like CONCAT('%', #{sch_value}, '%')
			  </when>
			  <when test="sch_type == 'board_content'">
			  AND board_content like CONCAT('%', #{sch_value}, '%')
			  </when>
	    </choose>
	
	</select>
	
    <update id="board_update" parameterType="java.util.HashMap">
    	 <if test="board_division.equals('download')">
    	update 
    	board_tb
    	    	
    	set
    	board_title = #{board_title},
    	board_content = #{board_content},
    	board_updateid = #{board_updateid},
    	board_update_date = now()

		where board_seq = #{board_seq};
		 </if>
		 <if test="board_division.equals('portfolio')">
		 update 
    	board_tb a left join portfolio_tb b
        on a.board_seq = b.board_seq
    	    	
    	set
    	a.board_title = #{board_title},
    	a.board_content = #{board_content},
    	a.board_updateid = #{board_updateid},
    	a.board_update_date = now(),
        b.business_period = #{business_period},
        b.buyer = #{buyer},
        b.link = #{link},
        b.pf_division = #{pf_division}
		
		where a.board_seq = #{board_seq};
	</if>
	 <if test="board_division.equals('contact')">
    	update 
    	customer_tb
    	    	
    	set
    	status = #{status}
		where board_seq = #{board_seq};
	</if>
    </update>
    
    <update id="board_delete" parameterType="java.util.HashMap">
    	
        update
            board_tb
		set
        board_use_yn = 'N',
        board_update_date = now()    
        where
        board_seq = #{board_seq};
            
    </update>
    
    
    <!-- 서브 쿼리  -->
    
    <!-- 포트폴리오 추가 쿼리 -->
    <insert id="portfolio_insert" parameterType="java.util.HashMap">
		insert into portfolio_tb
			
			(
			board_seq,
			business_period,
			buyer,
			link,
			portfolio_etc,
			pf_division
			)
			
			values(

			#{board_seq},
			#{business_period},
			#{buyer},
			#{link},
			#{portfolio_etc},
			#{pf_division}

        )      
	</insert>
	
	<!-- 고객센터 추가 쿼리 -->
	<insert id="customer_insert" parameterType="java.util.HashMap">
		insert into customer_tb
			
			(
			board_seq,
			user_id,
			user_email,
			user_contact,
			status
			)
			
			values(

			#{board_seq},
			#{user_id},
			#{user_email},
			#{user_contact},
			#{status}

        )      
	</insert>
	
	<select id="download_list" resultType="Board" parameterType="java.util.HashMap">
	
	    select 
        a.*,
        (select count(b.file_seq) from file_tb b where b.file_use_yn = 'y' and b.board_seq = a.board_seq) as file_cnt,
        (select sum(b.file_hit) from file_tb b where b.board_seq = a.board_seq and b.file_use_yn = 'Y'  ) as file_hit,
        (select group_concat(b.file_sub_name,'*',a.board_division,'*',b.file_seq separator '|') 
        from file_tb b 
        where a.board_seq = b.board_seq and b.file_use_yn='Y') as file_sub_name,  
        (select group_concat(b.file_ori_name separator '|') 
        from file_tb b 
        where a.board_seq = b.board_seq and b.file_use_yn='Y') as file_ori_name
        from board_tb a 
        
         where a.board_division = 'download' and a.board_use_yn = 'Y'
		 <choose>
     	<when test="sch_type == 'board_title'">
		  AND a.board_title like CONCAT('%', #{sch_value}, '%')
		  </when>
		  <when test="sch_type == 'board_content'">
		  AND a.board_content like CONCAT('%', #{sch_value}, '%')
		  </when>
		  </choose>
        order by board_seq desc
        
        limit #{start}, #{end};
	
	</select>
	
	<select id="download_cnt" resultType="int" parameterType="Board">
	
	    select count(board_seq) from board_tb 
	    where board_division = 'download' and board_use_yn = 'y'
     	<choose>
	     	  <when test="sch_type == 'board_title'">
			  AND board_title like CONCAT('%', #{sch_value}, '%')
			  </when>
			  <when test="sch_type == 'board_content'">
			  AND board_content like CONCAT('%', #{sch_value}, '%')
			  </when>
	    </choose>
	
	</select>
	
	 <update id="download_hit" parameterType="int">
        update board_tb set board_hit = board_hit + 1 where board_seq = #{board_seq}
    </update>
    
    <select id="portfolio_list" resultType="Board" parameterType="java.util.HashMap">

	      select 
        a.*,
        (select count(b.file_seq) from file_tb b where b.file_use_yn = 'y' and b.board_seq = a.board_seq) as file_cnt,
        (select sum(b.file_hit) from file_tb b where b.board_seq = a.board_seq and b.file_use_yn = 'Y'  ) as file_hit,
        (select group_concat(b.file_sub_name,'*',a.board_division,'*',b.file_seq separator '|') 
        from file_tb b 
        where a.board_seq = b.board_seq and b.file_use_yn='Y') as file_sub_name,  
        (select group_concat(b.file_ori_name separator '|') 
        from file_tb b 
        where a.board_seq = b.board_seq and b.file_use_yn='Y') as file_ori_name,
        c.business_period, c.buyer, c.link, c.pf_division, (select left(c.business_period ,4)) as pf_year,
        (MOD(a.board_seq, 2) = 1) as seq_division,
        d.file_path, d.file_sub_name
        
        from board_tb a left join portfolio_tb c on a.board_seq = c.board_seq left join file_tb d on a.board_seq = d.board_seq
        
         where a.board_division = 'portfolio' and a.board_use_yn = 'Y' and d.file_use_yn = 'Y' and (select left(c.business_period ,4)) = 
        <if test="pf_year.equals('2018')">
         2018
    	</if>
    	<if test="pf_year.equals('2009')">
         2009
    	</if>
    	<if test="pf_year.equals('2008')">
         2008
    	</if>
    	<if test="pf_year.equals('2007')">
         2007
    	</if>
		
		 <choose>
     	<when test="sch_type == 'board_title'">
		  AND a.board_title like CONCAT('%', #{sch_value}, '%')
		  </when>
		  <when test="sch_type == 'board_content'">
		  AND a.board_content like CONCAT('%', #{sch_value}, '%')
		  </when>
		  </choose>
        order by board_seq desc;
        
	
	</select>
	

</mapper>