<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin_tbs">
	<resultMap type="admin_tb" id="admin_tbResult">
		<result property="ad_seq" column="ad_seq" />
		<result property="ad_id" column="ad_id" />
		<result property="ad_password" column="ad_password" />
		<result property="ad_name" column="ad_name" />
		<result property="ad_contact" column="ad_contact" />
		<result property="ad_email" column="ad_email" />
		<result property="ad_hiredate" column="ad_hiredate" />
		<result property="ad_updateid" column="ad_updateid" />
		<result property="ad_update_date" column="ad_update_date" />
		<result property="ad_rank" column="ad_rank" />
		<result property="ad_etc" column="ad_etc" />
	</resultMap>
	
	<insert id="insert" parameterType="admin_tb">
		insert into admin_tb values(NULL, #{ad_id}, password(#{ad_password}), #{ad_name}, #{ad_contact}, #{ad_email}, now(), #{ad_updateid},
		now(), NULL, 0);
	</insert>
	<select id="idcheck" parameterType="String" resultType="Integer">
		select count(*) from admin_tb where ad_id = #{ad_id}
	</select>
	<select id="selectUserInfo" parameterType="HashMap" resultType="admin_tb">
		select * from admin_tb where ad_id = #{ad_id} 
		and ad_password = password(#{ad_password})
	</select>
	
	<!--  권수추가  -->
	<!-- 관리자정보읽어오기 -->
	<select id="admin_read" parameterType="int" resultType="admin_tb">
		select * 
		from admin_tb where ad_seq = #{ad_seq} 
	</select>
	<!-- 관리자 수정 -->
    <update id="admin_update" parameterType="java.util.HashMap">
    	update 
    	admin_tb
		set
     	ad_name = #{ad_name},
    	ad_contact = #{ad_contact},
    	ad_email = #{ad_email},
    	ad_updateid = #{ad_updateid},
		ad_update_date = now()    	
		where ad_seq = #{ad_seq}
   </update>
   <!-- 관리자 비밀번호체크 -->
   <select id="passwordCheck" resultType="int" parameterType="java.util.HashMap">
        SELECT 
            COUNT(*) 
        FROM 
        	admin_tb
        WHERE 
        	ad_seq = #{ad_seq} and ad_password = password(#{ad_ori_password})
    </select>
    <!-- 관리자 수정 -->
    <update id="password_update" parameterType="java.util.HashMap">
    	update 
    	admin_tb
		set
     	ad_password = password(#{ad_password}),
    	ad_updateid = #{ad_updateid},
		ad_update_date = now()    	
		where ad_seq = #{ad_seq}
   </update>
   <!-- 사원목록출력 -->
   <select id="employee_list" resultType="admin_tb" parameterType="java.util.HashMap">
	
	    select
	     
        *
        
        from admin_tb
        where ad_etc = 1        
        order by ad_seq desc
        
        limit #{start}, #{end};
	
	</select>
	<!-- 사원목록 전체 수 -->
	<select id="employee_cnt" resultType="int" parameterType="admin_tb">
	
	    select count(ad_seq) from admin_tb 
	
	</select>
	<!-- 회원가입대기자 전체 수 -->
	<select id="wait_cnt" resultType="int" parameterType="admin_tb">
	    select count(ad_seq) from admin_tb where ad_etc = 0 
	</select>
	<!-- 사원관리 삭제쿼리  -->
	<select id="employee_delete" parameterType="int">
	delete from admin_tb where ad_seq = #{ad_seq};
	</select>
	<!-- 사원목록출력 -->
   <select id="wait_list" resultType="admin_tb" parameterType="java.util.HashMap">	
	    select	     
        *        
        from admin_tb
        where ad_etc = 0        
        order by ad_seq desc	
	</select>
	<!-- 회원가입대기자 승인 -->
	<update id="wait_admit" parameterType="java.util.HashMap">
    	
        update
            admin_tb
		set
		ad_hiredate = #{ad_hiredate},
		ad_rank = #{ad_rank},
        ad_etc = #{ad_etc},
        ad_update_date = now()    
        where
        ad_seq = #{ad_seq}
            
    </update>
</mapper>